<launch>
    <!-- Load the robot description from URDF -->
    <param name="robot_description" command="cat $(find robot_simulation)/urdf/rover.urdf" />

    <!-- Launch Gazebo with the empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- Spawn the robot in Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model 4wheel"  output="screen" />

    <!-- Load the robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Launch the joint state publisher GUI -->
    <!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />    <!-- We don't need slider -->

    <!-- Start SLAM with gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
        <rosparam file="$(find robot_simulation)/config/gmapping_params.yaml" command="load" />
    </node>

    <!-- Start EKF Localization -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam file="$(find robot_simulation)/config/ekf.yaml" command="load" />
    </node>

    <!-- Start Move Base for navigation -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find robot_simulation)/config/movebase_params.yaml" command="load" />
        <rosparam file="$(find robot_simulation)/config/global_planner_params.yaml" command="load" /> 
        <rosparam file="$(find robot_simulation)/config/local_planner_params.yaml" command="load" /> 
        <rosparam file="$(find robot_simulation)/config/global_costmap_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find robot_simulation)/config/local_costmap_params.yaml" command="load" ns="local_costmap" /> 
    </node>
</launch>